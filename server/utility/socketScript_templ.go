// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package serverUtility

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "Gooo/helpers/gooo"

func SocketScript() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if gooo.IsLocal(ctx) {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n\n\t\t\t\tfunction setupReloadSocket() {\n\t\t\t\t\tlet ws;\n\t\t\t\t\tfunction connect() {\n\t\t\t\t\t\tws = new WebSocket(\"ws://\" + location.host + \"/ws/reload\");\n\n\t\t\t\t\t\tws.onopen = () => {\n\t\t\t\t\t\t\tconsole.log(\"[dev] Connected to reload socket\");\n\t\t\t\t\t\t};\t\n\n\t\t\t\t\t\tws.onclose = () => {\n\t\t\t\t\t\t\tconsole.log(\"[dev] WebSocket closed, reconnecting in 1s...\");\n\t\t\t\t\t\t\tsetTimeout(connect, 1000);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tws.onmessage = (event) => {\n\t\t\t\t\t\t\tif (event.data === \"reload\") {\n\t\t\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tws.onerror = (err) => {\n\t\t\t\t\t\t\tconsole.error(`[dev] Error with reload socket ${err}`);\n\t\t\t\t\t\t\tsetTimeout(connect, 1000);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tconnect();\n\t\t\t\t}\n\n\t\t\t\tif (window.location.hostname === \"localhost\") {\n\t\t\t\t\tsetupReloadSocket();\n\t\t\t\t}\n</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
